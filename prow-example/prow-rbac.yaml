# ServiceAccount for Deck
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deck
  namespace: default

---
# ServiceAccount for Hook
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hook
  namespace: default

---
# ServiceAccount for Plank (used by prow-controller-manager)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: plank
  namespace: default

---
# Secret for Deck ServiceAccount token
apiVersion: v1
kind: Secret
metadata:
  name: deck-token
  namespace: default
  annotations:
    kubernetes.io/service-account.name: deck
type: kubernetes.io/service-account-token

---
# Secret for Plank ServiceAccount token
apiVersion: v1
kind: Secret
metadata:
  name: plank-token
  namespace: default
  annotations:
    kubernetes.io/service-account.name: plank
type: kubernetes.io/service-account-token

---
# Role to grant permissions to access ProwJob resources in the default namespace (for Deck)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-deck
  namespace: default
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["get", "list", "watch"]

---
# Role for Hook to manage ProwJobs in the default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-hook
  namespace: default
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
# Role for Plank to manage ProwJobs, Pods, Leases, and Events in the default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-plank
  namespace: default
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create"]

---
# RoleBinding to bind the Role to the deck ServiceAccount in the default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-deck
  namespace: default
subjects:
  - kind: ServiceAccount
    name: deck
    namespace: default
roleRef:
  kind: Role
  name: prow-deck
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding to bind the Role to the hook ServiceAccount in the default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-hook
  namespace: default
subjects:
  - kind: ServiceAccount
    name: hook
    namespace: default
roleRef:
  kind: Role
  name: prow-hook
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding to bind the Role to the plank ServiceAccount in the default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-plank
  namespace: default
subjects:
  - kind: ServiceAccount
    name: plank
    namespace: default
roleRef:
  kind: Role
  name: prow-plank
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deck
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deck
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deck
subjects:
- kind: ServiceAccount
  name: deck
  namespace: default