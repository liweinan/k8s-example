# ServiceAccount for Deck
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deck
  namespace: prow

---
# ServiceAccount for Hook
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hook
  namespace: prow

---
# ServiceAccount for Plank
apiVersion: v1
kind: ServiceAccount
metadata:
  name: plank
  namespace: prow

---
# Secret for Deck ServiceAccount token
apiVersion: v1
kind: Secret
metadata:
  name: deck-token
  namespace: prow
  annotations:
    kubernetes.io/service-account.name: deck
type: kubernetes.io/service-account-token

---
# Secret for Plank ServiceAccount token
apiVersion: v1
kind: Secret
metadata:
  name: plank-token
  namespace: prow
  annotations:
    kubernetes.io/service-account.name: plank
type: kubernetes.io/service-account-token

---
# Role to grant permissions to access ProwJob resources in the prow namespace (for Deck)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-deck
  namespace: prow
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["get", "list", "watch"]

---
# Role to grant permissions to access ProwJob resources in the default namespace (for Deck)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-deck-default
  namespace: default
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["get", "list", "watch"]

---
# Role for Hook to manage ProwJobs in prow namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-hook
  namespace: prow
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
# Role for Hook to manage ProwJobs in default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-hook-default
  namespace: default
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
# Role for Plank to manage ProwJobs and Pods in the prow namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prow-plank
  namespace: prow
rules:
  - apiGroups: ["prow.k8s.io"]
    resources: ["prowjobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
# RoleBinding to bind the Role to the deck ServiceAccount in the prow namespace (for prow namespace)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-deck
  namespace: prow
subjects:
  - kind: ServiceAccount
    name: deck
    namespace: prow
roleRef:
  kind: Role
  name: prow-deck
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding to bind the Role to the deck ServiceAccount in the prow namespace (for default namespace)
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-deck-default
  namespace: default
subjects:
  - kind: ServiceAccount
    name: deck
    namespace: prow
roleRef:
  kind: Role
  name: prow-deck-default
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding to bind the Role to the hook ServiceAccount in the prow namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-hook
  namespace: prow
subjects:
  - kind: ServiceAccount
    name: hook
    namespace: prow
roleRef:
  kind: Role
  name: prow-hook
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding to bind the Role to the hook ServiceAccount in the default namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-hook-default
  namespace: default
subjects:
  - kind: ServiceAccount
    name: hook
    namespace: prow
roleRef:
  kind: Role
  name: prow-hook-default
  apiGroup: rbac.authorization.k8s.io

---
# RoleBinding to bind the Role to the plank ServiceAccount in the prow namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prow-plank
  namespace: prow
subjects:
  - kind: ServiceAccount
    name: plank
    namespace: prow
roleRef:
  kind: Role
  name: prow-plank
  apiGroup: rbac.authorization.k8s.io